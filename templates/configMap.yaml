{{- $kubeStateMetricsAddress := include "kube-state-metrics.address" . }}
{{- $dist := include "identifyDistribution" . }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "opni-metricbeat.name" . }}-daemonset-config
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "opni-metricbeat.labels" . | indent 4 }}
data:
  metricbeat.yml: |-
    metricbeat.config.modules:
      # Mounted `metricbeat-daemonset-modules` configmap:
      path: ${path.config}/modules.d/*.yml
      # Reload module configs as they change:
      reload.enabled: false

    metricbeat.autodiscover:
      providers:
        - type: kubernetes
          scope: cluster
          node: ${NODE_NAME}
          unique: true
          templates:
            - config:
                - module: kubernetes
                  hosts: ["{{ $kubeStateMetricsAddress }}"]
                  period: 10s
                  add_metadata: true
                  metricsets:
                    - state_node
                    - state_deployment
                    - state_daemonset
                    - state_replicaset
                    - state_pod
                    - state_container
                    - state_cronjob
                    - state_resourcequota
                    - state_statefulset
                    - state_service
                {{- if .Values.events.enabled }}
                - module: kubernetes
                  metricsets:
                  - event
                {{- end }}
        {{- if (eq $dist "nodist") }}
                - module: kubernetes
                  metricsets:
                    - apiserver
                  hosts: ["https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}"]
                  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
                  ssl.certificate_authorities:
                    - /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                  period: 30s
        {{- else }}
        {{- $controlplaneLabel := include "controlplaneLabel" . }}
        - type: kubernetes
          scope: node
          node: ${NODE_NAME}
          resource: node
          add_resource_metadata:
            node:
              include_labels: ["{{ $controlplaneLabel }}"]
          templates:
            - condition:
                contains:
                  kubernetes.labels.{{ $controlplaneLabel | replace "." "_" }}: "true"
              config:
                - module: kubernetes
                  metricsets:
                    - controllermanager
                  period: 10s
                  host: ${NODE_NAME}
                  hosts: ["localhost:10252"]
                - module: kubernetes
                  metricsets:
                    - scheduler
                  period: 10s
                  host: ${NODE_NAME}
                  hosts: ["localhost:10251"]
                - module: kubernetes
                  metricsets:
                    - apiserver
                  hosts: ["https://${NODE_NAME}:6443"]
                  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
                  ssl.verification_mode: "none"
                  ssl.certificate_authorities:
                    - /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                  period: 30s
        {{- end }}
    output.elasticsearch:
      hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']
      username: ${ELASTICSEARCH_USERNAME}
      password: ${ELASTICSEARCH_PASSWORD}
  {{- if .Values.elasticsearch.tls.caSecret.name }}
    output.elasticsearch.ssl.certificate_authorities: ["/opt/certs/ca.crt"]
  {{- end }}
  {{- if .Values.elasticsearch.tls.insecureSkipVerification }}
    output.elasticsearch.ssl.verification_mode: "none"
  {{- end }}
    setup.ilm.enabled: false
    setup.ilm.check_exists: false
  {{- if .Values.elasticsearch.loadDashboards }}
    setup.kibana:
      host: {{ required ".Values.kibana.port is required if loading dashboards" .Values.kibana.url }}
      port: {{ .Values.kibana.port }}
  {{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "opni-metricbeat.name" . }}-daemonset-modules
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "opni-metricbeat.labels" . | indent 4 }}
data:
  system.yml: |-
    - module: system
      period: 10s
      metricsets:
        - cpu
        - load
        - memory
        - network
        - process
        - process_summary
        #- core
        #- diskio
        #- socket
      processes: ['.*']
      process.include_top_n:
        by_cpu: 5      # include top 5 processes by CPU
        by_memory: 5   # include top 5 processes by memory

    - module: system
      period: 1m
      metricsets:
        - filesystem
        - fsstat
      processors:
      - drop_event.when.regexp:
          system.filesystem.mount_point: '^/(sys|cgroup|proc|dev|etc|host|lib|snap)($|/)'
  kubernetes.yml: |-
    - module: kubernetes
      metricsets:
        - node
        - system
        - pod
        - container
        - volume
      period: 10s
      host: ${NODE_NAME}
      hosts: ["https://${NODE_NAME}:10250"]
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      ssl.verification_mode: "none"
      # If there is a CA bundle that contains the issuer of the certificate used in the Kubelet API,
      # remove ssl.verification_mode entry and use the CA, for instance:
      #ssl.certificate_authorities:
        #- /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
    - module: kubernetes
      metricsets:
        - proxy
      period: 10s
      host: ${NODE_NAME}
      hosts: ["localhost:10249"]